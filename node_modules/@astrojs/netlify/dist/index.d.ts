import type { Context } from '@netlify/functions';
import type { AstroConfig, AstroIntegration, AstroIntegrationLogger } from 'astro';
export interface NetlifyLocals {
    netlify: {
        context: Context;
    };
}
type RemotePattern = AstroConfig['image']['remotePatterns'][number];
/**
 * Convert a remote pattern object to a regex string
 */
export declare function remotePatternToRegex(pattern: RemotePattern, logger: AstroIntegrationLogger): string | undefined;
export interface NetlifyIntegrationConfig {
    /**
     * If enabled, On-Demand-Rendered pages are cached for up to a year.
     * This is useful for pages that are not updated often, like a blog post,
     * but that you have too many of to pre-render at build time.
     *
     * You can override this behavior on a per-page basis
     * by setting the `Cache-Control`, `CDN-Cache-Control` or `Netlify-CDN-Cache-Control` header
     * from within the Page:
     *
     * ```astro
     * // src/pages/cached-clock.astro
     * Astro.response.headers.set('CDN-Cache-Control', "public, max-age=45, must-revalidate");
     * ---
     * <p>{Date.now()}</p>
     * ```
     */
    cacheOnDemandPages?: boolean;
    /**
     * If disabled, Middleware is applied to prerendered pages at build-time, and to on-demand-rendered pages at runtime.
     * Only disable when your Middleware does not need to run on prerendered pages.
     * If you use Middleware to implement authentication, redirects or similar things, you should should likely enabled it.
     *
     * If enabled, Astro Middleware is deployed as an Edge Function and applies to all routes.
     * Caveat: Locals set in Middleware are not applied to prerendered pages, because they've been rendered at build-time and are served from the CDN.
     *
     * @default {false}
     */
    edgeMiddleware?: boolean;
    /**
     * If enabled, Netlify Image CDN is used for image optimization.
     * This transforms images on-the-fly without impacting build times.
     *
     * If disabled, Astro's built-in image optimization is run at build-time instead.
     *
     * @default {true}
     */
    imageCDN?: boolean;
}
export default function netlifyIntegration(integrationConfig?: NetlifyIntegrationConfig): AstroIntegration;
export {};
