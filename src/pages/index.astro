---
import { app } from "../firebase/server";
import { getAuth } from "firebase-admin/auth";
import Layout from "../layouts/Layout-intro.astro";
import Hero from "../components/Hero.astro";

/* Verificar si el usuario está autenticado */
const auth = getAuth(app);

async function checkSessionAndRedirect() {
  const sessionCookie = Astro.cookies.get("__session");
  if (sessionCookie) {
    const decodedCookie = await auth.verifySessionCookie(sessionCookie.value);
    if (decodedCookie) {
      return Astro.redirect("/dashboard");
    }
  }
}


---

<Layout title="Luna - Inicia sesión">

  <div style="text-align: center;">
    <Hero title="Inicio de Sesión"/>
    <p>¿Eres nuevo aquí? <a class="hover:text-fuchsia-300 hover:underline" href="/register">Crear una cuenta</a></p>
    <div style="margin: 5%;">
      <form action="/api/auth/signin" method="post">
        <p>
          <input type="email" name="email" id="email" class="input-form" placeholder="Correo electrónico"/>
        </p>
        <p>
          <input type="password" name="password" id="password" class="input-form" placeholder="Contraseña" />
        </p>
        <div class="grid mx-auto w-32 ">
          <button type="submit" class="text-white font-bold bg-gradient-to-b from-violet-950 to-transparent p-2 rounded-lg
        hover:bg-purple-900 transition-colors duration-300 border-[1px] border-violet-900">Iniciar sesión</button>
          <br/>
        </div>

        <button id="google" class=" flextext-white font-bold bg-gradient-to-b from-violet-950 to-transparent p-2 rounded-lg
        hover:bg-purple-900 transition-colors duration-300 border-[1px] border-violet-900">
          <div class="flex gap-2">
            <svg class="size-5 text-center bg-white rounded-full p-[2px]" height="262" viewBox="0 0 256 262" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid"><path d="M255.878 133.451c0-10.734-.871-18.567-2.756-26.69H130.55v48.448h71.947c-1.45 12.04-9.283 30.172-26.69 42.356l-.244 1.622 38.755 30.023 2.685.268c24.659-22.774 38.875-56.282 38.875-96.027" fill="#4285F4"/><path d="M130.55 261.1c35.248 0 64.839-11.605 86.453-31.622l-41.196-31.913c-11.024 7.688-25.82 13.055-45.257 13.055-34.523 0-63.824-22.773-74.269-54.25l-1.531.13-40.298 31.187-.527 1.465C35.393 231.798 79.49 261.1 130.55 261.1" fill="#34A853"/><path d="M56.281 156.37c-2.756-8.123-4.351-16.827-4.351-25.82 0-8.994 1.595-17.697 4.206-25.82l-.073-1.73L15.26 71.312l-1.335.635C5.077 89.644 0 109.517 0 130.55s5.077 40.905 13.925 58.602l42.356-32.782" fill="#FBBC05"/><path d="M130.55 50.479c24.514 0 41.05 10.589 50.479 19.438l36.844-35.974C195.245 12.91 165.798 0 130.55 0 79.49 0 35.393 29.301 13.925 71.947l42.211 32.783c10.59-31.477 39.891-54.251 74.414-54.251" fill="#EB4335"/></svg>
            Iniciar sesión con Google
          </div>  
        </button>
      </form>
    </div>
    


  </div>
</Layout>

<script>
  import {
    getAuth,
    inMemoryPersistence,
    signInWithEmailAndPassword,
    GoogleAuthProvider,
    signInWithPopup,
    OAuthProvider,
  } from "firebase/auth";
  import { app } from "../firebase/client";

  const auth = getAuth(app);
  // Esto evitará que el navegador almacene los datos de sesión
  auth.setPersistence(inMemoryPersistence);

  const form = document.querySelector("form") as HTMLFormElement;
  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    const formData = new FormData(form);
    const email = formData.get("email")?.toString();
    const password = formData.get("password")?.toString();

    if (!email || !password) {
      return;
    }
    const userCredential = await signInWithEmailAndPassword(
      auth,
      email,
      password
    );
    const idToken = await userCredential.user.getIdToken();
    const response = await fetch("/api/auth/signin", {
      method: "GET",
      headers: {
        Authorization: `Bearer ${idToken}`,
      },
    });

    if (response.redirected) {
      window.location.assign(response.url);
    }
  });

  const googleSignin = document.querySelector("#google") as HTMLButtonElement;
  googleSignin.addEventListener("click", async () => {
    const provider = new GoogleAuthProvider();
    const userCredential = await signInWithPopup(auth, provider);
    const idToken = await userCredential.user.getIdToken();
    const res = await fetch("/api/auth/signin", {
      headers: {
        Authorization: `Bearer ${idToken}`,
      },
    });

    if (res.redirected) {
      window.location.assign(res.url);
    }
  });

  const appleSignin = document.querySelector("#apple") as HTMLButtonElement;
  appleSignin.addEventListener("click", async () => {
    const provider = new OAuthProvider('apple.com');
    try {
      const userCredential = await signInWithPopup(auth, provider);
      const idToken = await userCredential.user.getIdToken();
      const res = await fetch("/api/auth/signin", {
        method: "POST",
        headers: {
          Authorization: `Bearer ${idToken}`,
        },
      });

      if (res.redirected) {
        window.location.assign(res.url);
      }
    } catch (error) {
      console.error("Error al iniciar sesión con Apple:", error);
      // Manejar errores de inicio de sesión con Apple aquí
    }
  });

</script>
